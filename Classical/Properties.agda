module Classical.Properties where

open import Agda.Builtin.Equality using (refl)
open import Data.Bool renaming (Bool to ùîπ) using (true ; false)
open import Data.Product renaming (proj‚ÇÅ to p1 ; proj‚ÇÇ to p2) using (_√ó_ ; _,_)
open import Data.Sum renaming (inj‚ÇÅ to inl ; inj‚ÇÇ to inr) using (_‚äé_ ; [_,_])
open import Data.Empty renaming (‚ä• to √ò ; ‚ä•-elim to √ò-elim) using ()

open import Classical.Base

dec-C : (f : F) ‚Üí (i : IPC) ‚Üí (i ‚äßC f) ‚äé ((i ‚äßC f) ‚Üí √ò)
dec-C ‚ä• i = inr (Œª ())
dec-C (V a) i with i a
... | true = inl refl
... | false = inr (Œª ())
dec-C (f ‚àß g) i with dec-C f i | dec-C g i
... | inl i‚äßf | inl i‚äßg = inl (i‚äßf , i‚äßg)
... | inl i‚äßf | inr i‚ä≠g = inr (Œª (_ , i‚äßg) ‚Üí i‚ä≠g i‚äßg)
... | inr i‚ä≠f | _       = inr (Œª (i‚äßf , _) ‚Üí i‚ä≠f i‚äßf)
dec-C (f ‚à® g) i with dec-C f i | dec-C g i
... | inl i‚äßf | _       = inl (inl i‚äßf)
... | inr i‚ä≠f | inl i‚äßg = inl (inr i‚äßg)
... | inr i‚ä≠f | inr i‚ä≠g = inr [ i‚ä≠f , i‚ä≠g ]
dec-C (f ‚áí g) i with dec-C f i | dec-C g i
... | inl i‚äßf | inl i‚äßg = inl (Œª _ ‚Üí i‚äßg)
... | inl i‚äßf | inr i‚ä≠g = inr (Œª i‚äßf‚áíg ‚Üí i‚ä≠g (i‚äßf‚áíg i‚äßf))
... | inr i‚ä≠f | _       = inl (Œª i‚äßf ‚Üí √ò-elim (i‚ä≠f i‚äßf))
